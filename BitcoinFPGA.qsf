# -------------------------------------------------------------------------- #
#
# Copyright (C) 2017  Intel Corporation. All rights reserved.
# Your use of Intel Corporation's design tools, logic functions 
# and other software and tools, and its AMPP partner logic 
# functions, and any output files from any of the foregoing 
# (including device programming or simulation files), and any 
# associated documentation or information are expressly subject 
# to the terms and conditions of the Intel Program License 
# Subscription Agreement, the Intel Quartus Prime License Agreement,
# the Intel MegaCore Function License Agreement, or other 
# applicable license agreement, including, without limitation, 
# that your use is for the sole purpose of programming logic 
# devices manufactured by Intel and sold by Intel or its 
# authorized distributors.  Please refer to the applicable 
# agreement for further details.
#
# -------------------------------------------------------------------------- #
#
# Quartus Prime
# Version 17.0.0 Build 595 04/25/2017 SJ Lite Edition
# Date created = 11:25:15  October 09, 2017
#
# -------------------------------------------------------------------------- #
#
# Notes:
#
# 1) The default values for assignments are stored in the file:
#		BitcoinFPGA_assignment_defaults.qdf
#    If this file doesn't exist, see file:
#		assignment_defaults.qdf
#
# 2) Altera recommends that you do not modify this file. This
#    file is updated automatically by the Quartus Prime software
#    and any changes you make may be lost or overwritten.
#
# -------------------------------------------------------------------------- #



# Project-Wide Assignments
# ========================
set_global_assignment -name ORIGINAL_QUARTUS_VERSION 17.0.0
set_global_assignment -name PROJECT_CREATION_TIME_DATE "11:23:47  OCTOBER 06, 2017"
set_global_assignment -name LAST_QUARTUS_VERSION "17.0.0 Lite Edition"
set_global_assignment -name PROJECT_OUTPUT_DIRECTORY output_files
set_global_assignment -name SYSTEMVERILOG_FILE write_block.sv
set_global_assignment -name SYSTEMVERILOG_FILE test.sv
set_global_assignment -name SYSTEMVERILOG_FILE tb_final_shp.sv
set_global_assignment -name SYSTEMVERILOG_FILE super_hash_processor.sv
set_global_assignment -name SYSTEMVERILOG_FILE sha256_new_block.sv
set_global_assignment -name SYSTEMVERILOG_FILE sha256_hash_function.sv
set_global_assignment -name SYSTEMVERILOG_FILE sha1_new_block.sv
set_global_assignment -name SYSTEMVERILOG_FILE sha1_hash_function.sv
set_global_assignment -name SYSTEMVERILOG_FILE memory_k_chooser.sv
set_global_assignment -name SYSTEMVERILOG_FILE memory_block.sv
set_global_assignment -name SYSTEMVERILOG_FILE md5_hash_function.sv
set_global_assignment -name SYSTEMVERILOG_FILE hash_block.sv
set_global_assignment -name SYSTEMVERILOG_FILE delay_block.sv
set_global_assignment -name SYSTEMVERILOG_FILE definitions.sv
set_global_assignment -name SYSTEMVERILOG_FILE control_write_end.sv
set_global_assignment -name SYSTEMVERILOG_FILE control_round.sv
set_global_assignment -name SYSTEMVERILOG_FILE control_read_assign.sv
set_global_assignment -name SYSTEMVERILOG_FILE control_hash_quad.sv
set_global_assignment -name SYSTEMVERILOG_FILE control_block.sv
set_global_assignment -name SYSTEMVERILOG_FILE calc_num_blocks.sv

# Classic Timing Assignments
# ==========================
set_global_assignment -name MIN_CORE_JUNCTION_TEMP "-40"
set_global_assignment -name MAX_CORE_JUNCTION_TEMP 100

# Analysis & Synthesis Assignments
# ================================
set_global_assignment -name FAMILY "Arria II GX"
set_global_assignment -name TOP_LEVEL_ENTITY super_hash_processor

# Fitter Assignments
# ==================
set_global_assignment -name DEVICE EP2AGX45DF29I5
set_global_assignment -name ERROR_CHECK_FREQUENCY_DIVISOR 256

# Power Estimation Assignments
# ============================
set_global_assignment -name POWER_PRESET_COOLING_SOLUTION "23 MM HEAT SINK WITH 200 LFPM AIRFLOW"
set_global_assignment -name POWER_BOARD_THERMAL_MODEL "NONE (CONSERVATIVE)"

# -------------------------
# start ENTITY(BitcoinFPGA)

# end ENTITY(BitcoinFPGA)
# -----------------------

# ----------------------------------
# start ENTITY(super_hash_processor)

	# start DESIGN_PARTITION(Top)
	# ---------------------------

		# Incremental Compilation Assignments
		# ===================================
		set_global_assignment -name PARTITION_NETLIST_TYPE SOURCE -section_id Top
		set_global_assignment -name PARTITION_FITTER_PRESERVATION_LEVEL PLACEMENT_AND_ROUTING -section_id Top
		set_global_assignment -name PARTITION_COLOR 16764057 -section_id Top

	# end DESIGN_PARTITION(Top)
	# -------------------------

# end ENTITY(super_hash_processor)
# --------------------------------
set_instance_assignment -name PARTITION_HIERARCHY root_partition -to | -section_id Top